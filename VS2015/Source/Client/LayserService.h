//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Laser_sys
//  @ File Name : LayserService.h
//  @ Date : 2017/7/4
//  @ Author : akfheaven
//
//


#if !defined(_LAYSERSERVICE_H)
#define _LAYSERSERVICE_H

#include "common\mavlink.h"
#include "SimpleThread.h"
#include "Tracker.h"


typedef struct {
	float time_boot_ms; /*< Timestamp (milliseconds since system boot)*/
	//float q1; /*< Quaternion component 1, w (1 in null-rotation)*/
	//float q2; /*< Quaternion component 2, x (0 in null-rotation)*/
	//float q3; /*< Quaternion component 3, y (0 in null-rotation)*/
	//float q4; /*< Quaternion component 4, z (0 in null-rotation)*/
	//float rollspeed; /*< Roll angular speed (rad/s)*/
	//float pitchspeed; /*< Pitch angular speed (rad/s)*/
	//float yawspeed; /*< Yaw angular speed (rad/s)*/
	//char name[5];
} mMavlink_attitude_quaternion_t;


class LayserService {
public:
	~LayserService();
	void Start(int port);
	void Stop();
private:

	//UDP
	SimpleThread *ReadThread;
	static void ReadDataRunWarp(void* Owner);
	void ReadDataRun();
	bool ReadContinueFlag;

	int port = 7777;//C++11?
	static const int MAX_BUFFER = 2048;
	static const int READ_LEN = 2048;

	//share memery
	Tracker *Trackers = NULL;
	



};

#endif  //_LAYSERSERVICE_H
