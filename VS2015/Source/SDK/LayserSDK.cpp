//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Laser_sys
//  @ File Name : LayserSDK.cpp
//  @ Date : 2017/7/4
//  @ Author : 
//
//

#include <cstdio>
#include <tchar.h>
#include "LayserSDK.h"


void LayserSDK::Start() {

	//start read and send thread;
	//UpdateThread = new SimpleThread();
	//UpdateThread->SetRun(UpdateDataRunWarp, this);
	//UpdateContinueFlag = true;
	//UpdateThread->Start("Update");


	// 创建共享文件句柄  
	HANDLE hMapFile = CreateFileMapping(
		INVALID_HANDLE_VALUE,    // 物理文件句柄  
		NULL,                    // 默认安全级别  
		PAGE_READWRITE,          // 可读可写  
		0,                       // 高位文件大小  
		sizeof(Tracker) * MAX_TRACKER_NUM,                // 地位文件大小  
		_T(TRACERS_SHARE_MEM_NAME)                   // 共享内存名称  
		);


	Trackers = (Tracker*)MapViewOfFile(
		hMapFile,            // 共享内存的句柄  
		FILE_MAP_ALL_ACCESS, // 可读写许可  
		0,
		0,
		sizeof(Tracker) * MAX_TRACKER_NUM
		);
}

void LayserSDK::Stop() {
	UpdateContinueFlag = false;
	//UpdateThread->Stop();
}

Tracker* LayserSDK::GetChipData(uint8_t trackerID) {
	if (trackerID >= 0 && trackerID <= MAX_TRACKER_NUM) {
		return &Trackers[trackerID];
	}
	return NULL;
}

void LayserSDK::UpdateDate() {

}

void LayserSDK::UpdateDataRunWarp(void * Owner)
{
	LayserSDK* sdk = (LayserSDK*)(Owner);
	sdk->UpdateDataRun();
}

void LayserSDK::UpdateDataRun()
{
	while (UpdateContinueFlag) {
		UpdateDate();
	}
}

